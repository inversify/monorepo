{
  "author": "Adrián Martínez Jiménez",
  "bugs": {
    "url": "https://github.com/inversify/monorepo/issues"
  },
  "description": "InversifyJs benchmarks package",
  "dependencies": {
    "@hono/node-server": "1.19.4",
    "@inversifyjs/benchmark-utils": "workspace:*",
    "@inversifyjs/http-core": "workspace:*",
    "@inversifyjs/http-express": "workspace:*",
    "@inversifyjs/http-express-v4": "workspace:*",
    "@inversifyjs/http-fastify": "workspace:*",
    "@inversifyjs/http-hono": "workspace:*",
    "@nestjs/common": "11.1.6",
    "@nestjs/core": "11.1.6",
    "@nestjs/platform-express": "11.1.6",
    "@nestjs/platform-fastify": "11.1.6",
    "express": "5.1.0",
    "express4": "npm:express@4.21.2",
    "fastify": "5.6.1",
    "hono": "4.9.8",
    "inversify": "7.10.1",
    "rxjs": "7.8.2"
  },
  "devDependencies": {
    "@types/express": "^5.0.3",
    "@types/express4": "npm:@types/express@4.17.23",
    "@types/k6": "^1.3.0",
    "@types/node": "^22.18.6",
    "eslint": "9.36.0",
    "prettier": "3.6.2",
    "rimraf": "6.0.1",
    "rollup": "4.52.2",
    "ts-loader": "9.5.4",
    "tslib": "2.8.1",
    "typescript": "5.9.2"
  },
  "homepage": "https://inversify.io",
  "keywords": [
    "dependency injection",
    "dependency inversion",
    "di",
    "inversion of control container",
    "ioc",
    "javascript",
    "node",
    "typescript"
  ],
  "devEngines": {
    "node": "^22.10.2",
    "pnpm": "^10.13.1"
  },
  "license": "MIT",
  "name": "@inversifyjs/http-benchmarks",
  "private": true,
  "repository": {
    "type": "git",
    "url": "git+https://github.com/inversify/monorepo.git"
  },
  "scripts": {
    "benchmarks:run:cjs:low": "BUILD_TARGET=cjs VUS=16 ./bin/run-cjs.cjs",
    "benchmarks:run:cjs:medium": "BUILD_TARGET=cjs VUS=128 ./bin/run-cjs.cjs",
    "benchmarks:run:cjs:high": "BUILD_TARGET=cjs VUS=1024 ./bin/run-cjs.cjs",
    "build": "pnpm run build:cjs",
    "build:cjs": "tsc --build tsconfig.cjs.json && pnpm exec foundation-ts-package-cjs ./lib/cjs",
    "build:clean": "rimraf lib",
    "format": "prettier --write ./src",
    "lint": "eslint ./src",
    "prebuild": "pnpm run build:clean"
  }
}
